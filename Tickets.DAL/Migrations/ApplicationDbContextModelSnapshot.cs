// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Tickets.DAL.Contexts;

#nullable disable

namespace Tickets.WebAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Tickets.Infrastructure.Models.Segments", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("AirlineCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ArriveDatetime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ArriveDatetimeTimezone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ArrivePlace")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("Birthdate")
                        .HasColumnType("date");

                    b.Property<DateTime>("DepartDatetime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DepartDatetimeTimezone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DepartPlace")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DocNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DocType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FlightNum")
                        .HasColumnType("integer");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OperationPlace")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("OperationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("OperationTimeTimezone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OperationType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PassengerType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PnrId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("SerialNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TicketNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TicketType")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("TicketNumber", "SerialNumber")
                        .IsUnique();

                    b.ToTable("Segments");
                });
#pragma warning restore 612, 618
        }
    }
}
