// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Tickets.Infrastructure;

#nullable disable

namespace Tickets.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230511153731_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Tickets.Models.Segments", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("ID"));

                    b.Property<string>("AirlineCode")
                        .HasColumnType("text")
                        .HasColumnName("airline_code");

                    b.Property<DateTime>("ArriveDatetime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("arrive_datetime");

                    b.Property<string>("ArriveDatetimeTimezone")
                        .HasColumnType("text")
                        .HasColumnName("arrive_datetime_timezone");

                    b.Property<string>("ArrivePlace")
                        .HasColumnType("text")
                        .HasColumnName("arrive_place");

                    b.Property<DateOnly>("Birthdate")
                        .HasColumnType("date")
                        .HasColumnName("birthdate");

                    b.Property<DateTime>("DepartDatetime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("depart_datetime");

                    b.Property<string>("DepartDatetimeTimezone")
                        .HasColumnType("text")
                        .HasColumnName("depart_datetime_timezone");

                    b.Property<string>("DepartPlace")
                        .HasColumnType("text")
                        .HasColumnName("depart_place");

                    b.Property<string>("DocNumber")
                        .HasColumnType("text")
                        .HasColumnName("doc_number");

                    b.Property<string>("DocType")
                        .HasColumnType("text")
                        .HasColumnName("doc_type");

                    b.Property<int>("FlightNum")
                        .HasColumnType("integer")
                        .HasColumnName("flight_num");

                    b.Property<string>("Gender")
                        .HasColumnType("text")
                        .HasColumnName("gender");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("OperationPlace")
                        .HasColumnType("text")
                        .HasColumnName("operation_place");

                    b.Property<DateTime>("OperationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("operation_time");

                    b.Property<string>("OperationTimeTimezone")
                        .HasColumnType("text")
                        .HasColumnName("operation_time_timezone");

                    b.Property<string>("OperationType")
                        .HasColumnType("text")
                        .HasColumnName("operation_type");

                    b.Property<string>("PassengerType")
                        .HasColumnType("text")
                        .HasColumnName("passenger_type");

                    b.Property<string>("Patronymic")
                        .HasColumnType("text")
                        .HasColumnName("patronymic");

                    b.Property<string>("PnrId")
                        .HasColumnType("text")
                        .HasColumnName("pnr_id");

                    b.Property<long>("SerialNumber")
                        .HasColumnType("bigint")
                        .HasColumnName("serial_number");

                    b.Property<string>("Surname")
                        .HasColumnType("text")
                        .HasColumnName("surname");

                    b.Property<string>("TicketNumber")
                        .HasColumnType("text")
                        .HasColumnName("ticket_number");

                    b.Property<int>("TicketType")
                        .HasColumnType("integer")
                        .HasColumnName("ticket_type");

                    b.HasKey("ID")
                        .HasName("pk_segments");

                    b.HasIndex("TicketNumber", "SerialNumber")
                        .IsUnique()
                        .HasDatabaseName("ix_segments_ticket_number_serial_number");

                    b.ToTable("segments", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
